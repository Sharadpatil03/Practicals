// SPDX-License-Identifier: MIT
pragma solidity ^0.8.18;

contract StudentData{
    struct Student{
        uint id;
        string name;
        uint age;
    }

    Student[] public students;
    event StudentAdded(uint id,string name, uint age);

    function AddStudent(uint _id,string memory _name, uint _age) public {
        Student memory newStudent = Student({
            id : _id,
            name : _name,
            age : _age
        });
        students.push(newStudent);
        emit StudentAdded(_id, _name, _age);
    }

    function GetStudent(uint index) public view returns (uint,string memory,uint){
        require(index<students.length,"Student is not found");
        Student memory student = students[index];
        return(student.id,student.name,student.age);
    }
   function GetAllStudents() public view returns (Student[] memory) {
       return students;
   }

    fallback() external  {
        // handles external unexpected calls means data that is not in functions.
     }
}
