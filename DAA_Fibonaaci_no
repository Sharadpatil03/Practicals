
#include <iostream>
using namespace std;
int fibIterative(int n){
    if(n<=1){
        return n;
    }
    int prev1 = 1;
    int prev2 = 0;
    int current =0;
    for(int i=2; i<=n; i++){
        current = prev1+prev2;
        prev2=prev1;
        prev1=current;
    }
    return current;
    
}
int fibRecursive(int n){
    if(n<=1){
        return n;
    }
    return fibRecursive(n-1)+fibRecursive(n-2);
}
void PrintFibonacci(int n){
    cout<<"The fibonacci Series using Iterative Approach is";
    cout<<endl;
    for(int i=0; i<=n; i++){
        cout<<fibIterative(i)<<" ";
    }
    cout<<endl;
    cout<<"The fibonacci Series using Recursive Approach is";
    cout<<endl;
    for(int i=0; i<=n; i++){
        cout<<fibRecursive(i)<<" ";
    }
    cout<<endl;
}
int main() {

    cout<<endl;
    int n;
    cin>>n;
    PrintFibonacci(n);


    return 0;
}


























// Second way :

#include <bits/stdc++.h>
using namespace std;

// 0 1 1 2 3 5
int fibIterative(int n){
    if(n<=1){
        return n;
    }
    
    int prev2=0;  //f(0)
    int prev1=1;  //f(1)
    int current;
    for(int i=2; i<=n; i++){
        current=prev2+ prev1;
        prev2=prev1;
        prev1=current;
    }
    return current;
}

int fibRec(int n){
    if(n<=1){
        return n;
    }
    return fibRec(n-1)+ fibRec(n-2);
}

int main() {
int n;
cin>>n;
cout<<fibIterative(n)<<endl;

cout<<fibRec( n);

    return 0;
}
